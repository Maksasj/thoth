#include <iostream>

#include "test.h"

using namespace thoth;

int main() {
    TEST_CASE {
        Double a("1");
        Double b("1");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("1.0");
        Double b("1.0");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("0.1");
        Double b("0.1");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("0.123456789");
        Double b("0.123456789");

        ensure(a == b);
    }
    
    TEST_CASE {
        Double a("123456789.123456789");
        Double b("123456789.123456789");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("456754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");
        Double b("456754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("416754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");
        Double b("456754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");

        ensure(!(a == b));
    }

    TEST_CASE {
        Double a("-1");
        Double b("-1");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("-1.0");
        Double b("-1.0");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("-0.1");
        Double b("-0.1");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("-0.123456789");
        Double b("-0.123456789");

        ensure(a == b);
    }
    
    TEST_CASE {
        Double a("-123456789.123456789");
        Double b("-123456789.123456789");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("-456754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");
        Double b("-456754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");

        ensure(a == b);
    }

    TEST_CASE {
        Double a("-416754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");
        Double b("-316754567895982737589265893265832752375903275932758932753289573290573290570.56827598237589327583276329602067290367029378692375901789571095761975102756129067192671296");

        ensure(!(a == b));
    }

    return 0;
}